{"version":3,"sources":["img/icon.png","img/bg.jpeg","components/Header/index.jsx","components/Footer/index.jsx","components/Content/index.jsx","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","src","myIcon","alt","target","rel","Component","Footer","bg","backgroundImage","concat","bgImage","Content","style","HomePage","Content_Content","App","components_Header","home_HomePage","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0UC0CzBC,mLAnCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAIJ,EAAAC,EAAAC,cAAA,OAAKG,IAAMC,IAASC,IAAI,QAE3CP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KACEE,KAAK,yCACLI,OAAO,SACPC,IAAI,uBAHN,wCAOAT,EAAAC,EAAAC,cAAA,KACEE,KAAK,sCACLI,OAAO,SACPC,IAAI,uBAHN,4BAOAT,EAAAC,EAAAC,cAAA,KACEE,KAAK,2BACLI,OAAO,SACPC,IAAI,uBAHN,oBAvBSC,aCFAC,0LAEjB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAJaO,6BCG9BE,EAAK,CACTC,gBAAe,OAAAC,cAASC,EAAT,MAGIC,mLAEjB,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAac,MAAOL,KAKrCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,6GACAF,EAAAC,EAAAC,cAAA,6GACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KACEE,KAAK,2BACLI,OAAO,SACPC,IAAI,uBAEJT,EAAAC,EAAAC,cAAA,OACEG,IAAI,iEACJF,UAAU,UACVI,IAAI,sBAGRP,EAAAC,EAAAC,cAAA,OACEG,IAAI,2DACJF,UAAU,UACVI,IAAI,aAGRP,EAAAC,EAAAC,cAAA,0CACOF,EAAAC,EAAAC,cAAA,2DADP,UAGAF,EAAAC,EAAAC,cAAA,uNACwCF,EAAAC,EAAAC,cAAA,wEADxC,qDAC4EF,EAAAC,EAAAC,cAAA,iIAD5E,+FACwIF,EAAAC,EAAAC,cAAA,2FADxI,iEAGAF,EAAAC,EAAAC,cAAA,uPACAF,EAAAC,EAAAC,cAAA,mTAGAF,EAAAC,EAAAC,cAAA,0TAIAF,EAAAC,EAAAC,cAAA,2CACQF,EAAAC,EAAAC,cAAA,KACJE,KAAK,sDACLI,OAAO,SACPC,IAAI,uBAHA,6BADR,iDA7C2BC,aCNhBQ,0LAEjB,OACElB,EAAAC,EAAAC,cAACiB,EAAD,aAHgCT,cCcvBU,mLAVX,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,cANUb,aCMEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7e5293a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.e453d529.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.7a7f2b49.jpeg\";","import React, { Component } from 'react';\n// import { HashRouter as Router, Route, NavLink } from 'react-router-dom';\nimport './style.css';\nimport myIcon from \"../../img/icon.png\";\n\nclass Header extends Component {\n  render(){\n    return (\n      <div className=\"header-container\">\n        <div className=\"header-content\">\n          <div className=\"header-title\">\n            <div><a href=\"/\"><img src={ myIcon } alt=\"\" /></a></div>\n          </div>\n          <div className=\"header-nav-link\">\n            <a \n              href=\"https://zhuanlan.zhihu.com/c_134626828\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              弗兰人的菜肴\n            </a>\n            < a \n              href=\"https://zhuanlan.zhihu.com/fed-talk\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              前端专栏\n            </a>\n            <a\n              href=\"https://github.com/icepy\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Github\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './style.css';\n\nexport default class Footer extends Component {\n  render(){\n    return (\n      <div className=\"footer-container\">\n        <div className=\"footer-content\"></div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './style.css';\nimport bgImage from \"../../img/bg.jpeg\";\n// import meishiImage from \"../../img/meishi.png\";\n// import qixingImage from \"../../img/qixing.png\";\n\nconst bg = { \n  backgroundImage: `url(${bgImage})`,\n}\n\nexport default class Content extends Component {\n  render(){\n    return (\n      <div>\n        <div className=\"App-Header-Content\">\n          <div className=\"App-Header\" style={bg}>\n            {/* <h1 className=\"App-My-Tag\">五溪</h1> */}\n            {/* <div className=\"App-My-Des\">我寄愁心与明月，随风直到夜郎西。</div> */}\n          </div>\n        </div>\n        <div className=\"App-Content\">\n          <p>杨花落尽子规啼，闻道龙标过五溪。</p>\n          <p>我寄愁心与明月，随风直到夜郎西。</p>\n          <p>\n            <a\n              href=\"https://github.com/icepy\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img \n                src=\"https://img.shields.io/github/followers/icepy.svg?label=Follow\" \n                className=\"App-Svg\"\n                alt=\"github followers\"\n              />\n            </a>\n            <img\n              src=\"https://img.shields.io/github/license/icepy/icepy.me.svg\" \n              className=\"App-Svg\"\n              alt=\"license\"\n            />\n          </p>\n          <p>\n            你好，我是<strong>“icepy（五溪）”</strong>。 \n          </p>\n          <p>  \n            2011年开始从事编程的工作，经历了从前端到大前端变革的整个过程，深入理解 <strong>移动跨平台架构领域</strong> 的设计和原理，在 <strong>Web前端，移动Hybrid容器架构，小程序容器体系</strong> 上有着丰富的实践和沉淀，另外对 <strong>前端工程化体系，Node.js，Java，Go</strong> 有一定的涉猎和实践。\n          </p>\n          <p>在团队管理方面追求务实，有效沟通，有能力带领团队解决问题，完成目标，落实结果。</p>\n          <p>\n            在生活里，我非常喜欢烹饪食物和折腾摩托车的维修和维护，如果你也热爱摩托车旅行，不妨坐下来和我聊聊。\n          </p>\n          <p>\n            目前我在怀化，从事自己喜欢的工作，快乐认真的生活。\n            最后，我想感谢在我的人生旅途中，遇见的每一位朋友。\n          </p>\n          <p>\n            我的微博是 <a\n              href=\"https://weibo.com/2455876310/profile?topnav=1&wvr=6\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >@五溪的溪</a>，欢迎来撩。\n          </p>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Content from '../../components/Content';\nimport './style.css';\n\nexport default class HomePage extends Component {\n  render(){\n    return (\n      <Content/>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomePage from './pages/home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <HomePage />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["img/icon.png","img/bg.jpeg","components/Header/index.jsx","components/Footer/index.jsx","components/Content/index.jsx","pages/home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","src","myIcon","alt","target","rel","Component","Footer","bg","backgroundImage","concat","bgImage","Content","style","HomePage","Content_Content","App","components_Header","home_HomePage","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0UC0CzBC,mLAnCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAIJ,EAAAC,EAAAC,cAAA,OAAKG,IAAMC,IAASC,IAAI,QAE3CP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KACEE,KAAK,yCACLI,OAAO,SACPC,IAAI,uBAHN,wCAOAT,EAAAC,EAAAC,cAAA,KACEE,KAAK,sCACLI,OAAO,SACPC,IAAI,uBAHN,4BAOAT,EAAAC,EAAAC,cAAA,KACEE,KAAK,2BACLI,OAAO,SACPC,IAAI,uBAHN,oBAvBSC,aCFAC,0LAEjB,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAJaO,6BCG9BE,EAAK,CACTC,gBAAe,OAAAC,cAASC,EAAT,MAGIC,mLAEjB,OACEhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAac,MAAOL,KAKrCZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,6GACAF,EAAAC,EAAAC,cAAA,6GACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KACEE,KAAK,2BACLI,OAAO,SACPC,IAAI,uBAEJT,EAAAC,EAAAC,cAAA,OACEG,IAAI,iEACJF,UAAU,UACVI,IAAI,sBAGRP,EAAAC,EAAAC,cAAA,OACEG,IAAI,2DACJF,UAAU,UACVI,IAAI,aAGRP,EAAAC,EAAAC,cAAA,0CACOF,EAAAC,EAAAC,cAAA,2DADP,mMAEqCF,EAAAC,EAAAC,cAAA,+HAFrC,qMAIAF,EAAAC,EAAAC,cAAA,mTAGAF,EAAAC,EAAAC,cAAA,0TAIAF,EAAAC,EAAAC,cAAA,2CACQF,EAAAC,EAAAC,cAAA,KACJE,KAAK,sDACLI,OAAO,SACPC,IAAI,uBAHA,6BADR,iDA1C2BC,aCNhBQ,0LAEjB,OACElB,EAAAC,EAAAC,cAACiB,EAAD,aAHgCT,cCcvBU,mLAVX,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,cANUb,aCMEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9a5d3d55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.e453d529.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.7a7f2b49.jpeg\";","import React, { Component } from 'react';\r\n// import { HashRouter as Router, Route, NavLink } from 'react-router-dom';\r\nimport './style.css';\r\nimport myIcon from \"../../img/icon.png\";\r\n\r\nclass Header extends Component {\r\n  render(){\r\n    return (\r\n      <div className=\"header-container\">\r\n        <div className=\"header-content\">\r\n          <div className=\"header-title\">\r\n            <div><a href=\"/\"><img src={ myIcon } alt=\"\" /></a></div>\r\n          </div>\r\n          <div className=\"header-nav-link\">\r\n            <a \r\n              href=\"https://zhuanlan.zhihu.com/c_134626828\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              弗兰人的菜肴\r\n            </a>\r\n            < a \r\n              href=\"https://zhuanlan.zhihu.com/fed-talk\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              前端专栏\r\n            </a>\r\n            <a\r\n              href=\"https://github.com/icepy\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Github\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nexport default class Footer extends Component {\r\n  render(){\r\n    return (\r\n      <div className=\"footer-container\">\r\n        <div className=\"footer-content\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './style.css';\r\nimport bgImage from \"../../img/bg.jpeg\";\r\n// import meishiImage from \"../../img/meishi.png\";\r\n// import qixingImage from \"../../img/qixing.png\";\r\n\r\nconst bg = { \r\n  backgroundImage: `url(${bgImage})`,\r\n}\r\n\r\nexport default class Content extends Component {\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div className=\"App-Header-Content\">\r\n          <div className=\"App-Header\" style={bg}>\r\n            {/* <h1 className=\"App-My-Tag\">五溪</h1> */}\r\n            {/* <div className=\"App-My-Des\">我寄愁心与明月，随风直到夜郎西。</div> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"App-Content\">\r\n          <p>杨花落尽子规啼，闻道龙标过五溪。</p>\r\n          <p>我寄愁心与明月，随风直到夜郎西。</p>\r\n          <p>\r\n            <a\r\n              href=\"https://github.com/icepy\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img \r\n                src=\"https://img.shields.io/github/followers/icepy.svg?label=Follow\" \r\n                className=\"App-Svg\"\r\n                alt=\"github followers\"\r\n              />\r\n            </a>\r\n            <img\r\n              src=\"https://img.shields.io/github/license/icepy/icepy.me.svg\" \r\n              className=\"App-Svg\"\r\n              alt=\"license\"\r\n            />\r\n          </p>\r\n          <p>\r\n            你好，我是<strong>“icepy（五溪）”</strong>，\r\n            2011年开始从事编程的工作，经历了从前端到大前端变革的整个过程，在 <strong>前端，工程化，Hybrid容器，Node.js，跨平台架构</strong> 等领域有着丰富的实践和沉淀，于是成为了一名“核常兼备”的工程师。\r\n          </p>\r\n          <p>\r\n            在生活里，我非常喜欢烹饪食物和折腾摩托车的维修和维护，如果你也热爱摩托车旅行，不妨坐下来和我聊聊。\r\n          </p>\r\n          <p>\r\n            目前我在怀化，从事自己喜欢的工作，快乐认真的生活。\r\n            最后，我想感谢在我的人生旅途中，遇见的每一位朋友。\r\n          </p>\r\n          <p>\r\n            我的微博是 <a\r\n              href=\"https://weibo.com/2455876310/profile?topnav=1&wvr=6\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >@五溪的溪</a>，欢迎来撩。\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Content from '../../components/Content';\r\nimport './style.css';\r\n\r\nexport default class HomePage extends Component {\r\n  render(){\r\n    return (\r\n      <Content/>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomePage from './pages/home';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <HomePage />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}